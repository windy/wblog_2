= render partial: 'post_head', locals: { post: post }

.content.markdown
  == post.content_html

p.ptag.published-at
  | #{t('announce_at')}
  span #{format_date(post.created_at)}

= render 'common/copyright'
hr.blog-over
.rating-section data-controller='like'
  .rating-container
    .rating-header
      h4.rating-label = t('rating_label')
      .average-score
        span.score-label = t('average_score')
        span.score-value data-like-target='averageScore' #{post.average_score}
        span.score-max | /10
    
    .stars-container data-like-target='stars'
      / Stars will be dynamically generated by the like_controller.js
    
    .current-score
      span.score-label = t('your_score')
      span.score-value data-like-target='score' #{post.liked_by?(cookies[:like]) ? post.likes.where(id: cookies[:like]).first&.score || 0 : 0}
    
    button.like-button class="#{'liked' if post.liked_by?(cookies[:like])}" type='button' data-url=blog_likes_path(post) data-like-target='button' data-action='click->like#toggle'
      span.count #{@likes_count}
      span = t('likes')
  
  .qrcode-controller data-controller='qrcode'
    .qrcode
      a#qrcode-link href='#' data-action='click->qrcode#greet'
        i.fi-link
        | #{t('qr_code')}
    .social-share data-qrcode-target='wrapper'
      .qrcode-wrapper
        = render partial: "qrcode", locals: { str: blog_url(post) }